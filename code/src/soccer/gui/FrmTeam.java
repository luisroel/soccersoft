/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package soccer.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import soccer.database.DBTeam;
import security.entities.Item;
import security.entities.Status;
import soccer.entities.Team;
import security.entities.TrackChange;
import security.entities.UserRight;
import security.models.StatusComboBoxModel;
import soccer.entities.Association;
import soccer.models.TeamListModel;
import soccer.models.AssociationComboBoxModel;

/**
 *
 * @author Administrator
 */
public class FrmTeam extends javax.swing.JInternalFrame implements ActionListener, ItemListener, ListSelectionListener {

    /**
     * Creates new form FrmObject
     * @param right
     * @param user
     */
    public FrmTeam(UserRight right, Item user) {
        initComponents();
        myInitComponents(right, user);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cmbStatus = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstTeam = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtEntryUser = new javax.swing.JTextField();
        txtModUser = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtEntryDate = new javax.swing.JTextField();
        txtModDate = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        chkActive = new javax.swing.JCheckBox();
        btnNew = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtName = new javax.swing.JTextArea();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtShortName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cmbAssociation = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtAlias01 = new javax.swing.JTextField();
        txtAlias02 = new javax.swing.JTextField();
        txtAlias03 = new javax.swing.JTextField();
        txtAlias04 = new javax.swing.JTextField();
        txtAlias05 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtAlias06 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtAlias07 = new javax.swing.JTextField();
        txtAlias08 = new javax.swing.JTextField();
        txtAlias09 = new javax.swing.JTextField();
        txtAlias10 = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Team");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Filter:"));

        cmbStatus.setName(""); // NOI18N

        jScrollPane1.setViewportView(lstTeam);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(cmbStatus, 0, 218, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Change info:"));

        jLabel4.setText("Entry User:");

        jLabel5.setText("Mod. User:");

        txtEntryUser.setEnabled(false);

        txtModUser.setEnabled(false);

        jLabel6.setText("Entry Date:");

        jLabel7.setText("Mod. Date:");

        txtEntryDate.setEnabled(false);

        txtModDate.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEntryUser)
                    .addComponent(txtEntryDate))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtModUser)
                    .addComponent(txtModDate))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEntryUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtModUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEntryDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtModDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Team info:"));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Id:");

        txtId.setEnabled(false);

        chkActive.setText("Active");
        chkActive.setEnabled(false);

        btnNew.setText("New");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Name:");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Description:");

        txtName.setColumns(20);
        txtName.setLineWrap(true);
        txtName.setRows(5);
        txtName.setEnabled(false);
        jScrollPane2.setViewportView(txtName);

        btnEdit.setText("Edit");

        btnDelete.setText("Delete");

        jLabel8.setText("Association:");

        jLabel9.setText("Alias 1:");

        jLabel10.setText("Alias 2:");

        jLabel11.setText("Alias 3:");

        jLabel12.setText("Alias 4:");

        jLabel13.setText("Alias 5:");

        txtAlias01.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        txtAlias02.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        txtAlias03.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        txtAlias04.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        txtAlias05.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Alias 6:");

        txtAlias06.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Alias 7:");

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Alias 8:");

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Alias 9:");

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("Alias 10:");

        txtAlias07.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        txtAlias08.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        txtAlias09.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        txtAlias10.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel1))
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel12)
                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel13))
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chkActive)
                        .addGap(16, 16, 16))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtShortName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                            .addComponent(cmbAssociation, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtAlias02, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAlias04, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAlias03, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAlias01, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAlias05))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAlias06)
                                    .addComponent(txtAlias09)
                                    .addComponent(txtAlias10)
                                    .addComponent(txtAlias08)
                                    .addComponent(txtAlias07))))
                        .addGap(10, 10, 10)))
                .addGap(2, 2, 2)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNew, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnEdit, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnEdit, btnNew});

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel14, jLabel15, jLabel16, jLabel17, jLabel18});

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3});

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel10, jLabel11, jLabel12, jLabel13, jLabel9});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnNew)
                        .addComponent(chkActive)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtShortName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnEdit))
                        .addGap(22, 22, 22)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cmbAssociation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtAlias06, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtAlias07, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtAlias08, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtAlias09, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAlias10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(jLabel13)
                            .addComponent(btnDelete)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAlias01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel14))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtAlias02, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel15)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAlias03, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAlias04, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel17)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(txtAlias05, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnNew;
    private javax.swing.JCheckBox chkActive;
    private javax.swing.JComboBox cmbAssociation;
    private javax.swing.JComboBox cmbStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList lstTeam;
    private javax.swing.JTextField txtAlias01;
    private javax.swing.JTextField txtAlias02;
    private javax.swing.JTextField txtAlias03;
    private javax.swing.JTextField txtAlias04;
    private javax.swing.JTextField txtAlias05;
    private javax.swing.JTextField txtAlias06;
    private javax.swing.JTextField txtAlias07;
    private javax.swing.JTextField txtAlias08;
    private javax.swing.JTextField txtAlias09;
    private javax.swing.JTextField txtAlias10;
    private javax.swing.JTextField txtEntryDate;
    private javax.swing.JTextField txtEntryUser;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtModDate;
    private javax.swing.JTextField txtModUser;
    private javax.swing.JTextArea txtName;
    private javax.swing.JTextField txtShortName;
    // End of variables declaration//GEN-END:variables
    
    private int action;
    private DBTeam dbTeam;
    private UserRight right;
    private Item user;
    
    private void myInitComponents(UserRight right, Item user) {
        this.user = user;
        this.right = right;
        setNormalScenario();

        dbTeam = new DBTeam();
        btnNew.setActionCommand("New");
        btnNew.addActionListener(this);
        btnEdit.setActionCommand("Edit");
        btnEdit.addActionListener(this);
        btnDelete.setActionCommand("Delete");
        btnDelete.addActionListener(this);
        cmbAssociation.setModel(new AssociationComboBoxModel(1));          // only active objects
        cmbStatus.addItemListener(this);
        lstTeam.addListSelectionListener(this);
        
        loadStatus();
    }

    private void setNormalScenario(){
        cmbStatus.setEnabled(true);
        lstTeam.setEnabled(true);
        chkActive.setEnabled(false);
        txtShortName.setEnabled(false);
        txtName.setEnabled(false);
        cmbAssociation.setEnabled(false);
        txtAlias01.setEnabled(false);
        txtAlias02.setEnabled(false);
        txtAlias03.setEnabled(false);
        txtAlias04.setEnabled(false);
        txtAlias05.setEnabled(false);
        txtAlias06.setEnabled(false);
        txtAlias07.setEnabled(false);
        txtAlias08.setEnabled(false);
        txtAlias09.setEnabled(false);
        txtAlias10.setEnabled(false);
        
        btnNew.setEnabled(right.getIsCreated());
        btnEdit.setEnabled(right.getIsUpdated());
        btnDelete.setEnabled(right.getIsDeleted());
        
        btnNew.setText("New");
        btnEdit.setText("Edit");
        
        action = 0;         // no action
    }
    
    private void loadStatus(){
        cmbStatus.setModel(new StatusComboBoxModel());
        cmbStatus.setSelectedIndex(1);
    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        if (e.getStateChange() == ItemEvent.SELECTED){
            loadTeams();
        }
    }

    private void loadTeams(){
        if (cmbStatus.getModel().getSize() > 0) {
            Status status = (Status)cmbStatus.getSelectedItem();
            lstTeam.setModel(new TeamListModel(dbTeam.getList(status.getId())));
            if (lstTeam.getModel().getSize() > 0){
                lstTeam.setSelectedIndex(0);
            } else {
                // clear data fields
                clearFields();
            }
        } else {
            // clear list and data fields
            clearFields();
        }
    }

    private void clearFields(){
        txtId.setText("");
        txtShortName.setText("");
        txtName.setText("");
        cmbAssociation.setSelectedIndex(-1);
        txtAlias01.setText("");
        txtAlias02.setText("");
        txtAlias03.setText("");
        txtAlias04.setText("");
        txtAlias05.setText("");
        txtAlias06.setText("");
        txtAlias07.setText("");
        txtAlias08.setText("");
        txtAlias09.setText("");
        txtAlias10.setText("");
        chkActive.setSelected(true);
        txtEntryUser.setText("");
        txtEntryDate.setText("");
        txtModUser.setText("");
        txtModDate.setText("");
    }

    @Override
    public void valueChanged(ListSelectionEvent e) {
        loadDetail();
    }

    private void loadDetail(){
        if (!lstTeam.isSelectionEmpty()){
            Team obj = (Team)lstTeam.getSelectedValue();
            txtId.setText(Long.toString(obj.getId()));
            txtShortName.setText(obj.getShortName());
            txtName.setText(obj.getName());
            setCmbAssociation(obj.getAssociation().getId());
            txtAlias01.setText(obj.getAlias01());
            txtAlias02.setText(obj.getAlias02());
            txtAlias03.setText(obj.getAlias03());
            txtAlias04.setText(obj.getAlias04());
            txtAlias05.setText(obj.getAlias05());
            txtAlias06.setText(obj.getAlias06());
            txtAlias07.setText(obj.getAlias07());
            txtAlias08.setText(obj.getAlias08());
            txtAlias09.setText(obj.getAlias09());
            txtAlias10.setText(obj.getAlias10());
            chkActive.setSelected(obj.getIsActive());
            txtEntryUser.setText(obj.getTrack().getEntryUser().getName());
            txtEntryDate.setText(new SimpleDateFormat("MM/dd/yyyy hh:mm:ss").format(obj.getTrack().getEntryDate()));
            txtModUser.setText(obj.getTrack().getModUser().getName());
            txtModDate.setText(new SimpleDateFormat("MM/dd/yyyy hh:mm:ss").format(obj.getTrack().getModDate()));
        }        
    }
    
    private void setCmbAssociation(long associationId){
        int index = -1;
        Association obj;
        for (int i=0;i<cmbAssociation.getItemCount() && index == -1;i++){
            obj = (Association)cmbAssociation.getItemAt(i);
            if (obj.getId()== associationId){
                index = i;
            }
        }
        cmbAssociation.setSelectedIndex(index);
        cmbAssociation.repaint();
    }
    
    @Override
    public void actionPerformed(ActionEvent e) {
        if (null != e.getActionCommand()){
            switch (e.getActionCommand()) {
                case "New":
                    newRecord();
                    break;
                case "Edit":
                    editRecord();
                    break;
                case "Delete":
                    deleteRecord();
                    break;
                default:
                    JOptionPane.showMessageDialog(this, "Action not identified", "Unkown", JOptionPane.ERROR_MESSAGE);
                    break;
            }
        }
    }

    private void newRecord() {
        if (action == 0){
            setNewScenario();
        }else{
            String msg = validateData();
            if (!msg.isEmpty()){
                JOptionPane.showMessageDialog(this, msg, "Data Entry Error", JOptionPane.ERROR_MESSAGE);
            }else if (action == 1){                  // insert action
                msg = insertRecord();
                if (msg.isEmpty()){
                    setNormalScenario();
                    loadTeams();
                    JOptionPane.showMessageDialog(this, "Record created succesfully!", "New", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, msg, "Saving Data Error", JOptionPane.ERROR_MESSAGE);
                }
            }else{                                // update action
                msg = updateRecord();
                if (msg.isEmpty()){
                    setNormalScenario();
                    updateRow();
                    JOptionPane.showMessageDialog(this, "Record updated succesfully!", "Edit", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, msg, "Saving Data Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }

    private void setNewScenario(){
        cmbStatus.setEnabled(false);
        lstTeam.setEnabled(false);
        chkActive.setEnabled(false);
        txtShortName.setEnabled(true);
        txtName.setEnabled(true);
        cmbAssociation.setEnabled(true);
        txtAlias01.setEnabled(true);
        txtAlias02.setEnabled(true);
        txtAlias03.setEnabled(true);
        txtAlias04.setEnabled(true);
        txtAlias05.setEnabled(true);
        txtAlias06.setEnabled(true);
        txtAlias07.setEnabled(true);
        txtAlias08.setEnabled(true);
        txtAlias09.setEnabled(true);
        txtAlias10.setEnabled(true);
        btnNew.setEnabled(true);
        btnEdit.setEnabled(true);
        btnDelete.setEnabled(false);
        
        btnNew.setText("Save");
        btnEdit.setText("Cancel");
        
        clearFields();
        action = 1;     // new action
    }
    
    private String validateData() {
        String msg;
        if (txtShortName.getText().equals("")){
            msg = "Name field cannot be empty";
        } else if (txtName.getText().equals("")){
            msg = "Description field cannot be empty";
        } else if (cmbAssociation.getSelectedIndex() < 0){
            msg = "Association field has not been selected.";
        } else if (txtAlias01.getText().equals("")){
            msg = "Alias 1 field cannot be empty";
        } else {
            msg = "";
        }
        return msg;
    }

    private String insertRecord() {
        Association association = (Association)cmbAssociation.getSelectedItem();
        Team obj = new Team(
              -1
            , txtShortName.getText()
            , txtName.getText()
            , chkActive.isSelected()
            , new Item(association.getId(), association.getShortName())
            , txtAlias01.getText()
            , txtAlias02.getText()
            , txtAlias03.getText()
            , txtAlias04.getText()
            , txtAlias05.getText()
            , txtAlias06.getText()
            , txtAlias07.getText()
            , txtAlias08.getText()
            , txtAlias09.getText()
            , txtAlias10.getText()
            , new TrackChange(null, user, null, null)
        );
        
        return dbTeam.insert(obj);
    }
    
    private String updateRecord() {
        Association association = (Association)cmbAssociation.getSelectedItem();
        Team obj = new Team(
              Long.parseLong(txtId.getText())
            , txtShortName.getText()
            , txtName.getText()
            , chkActive.isSelected()
            , new Item(association.getId(), association.getShortName())
            , txtAlias01.getText()
            , txtAlias02.getText()
            , txtAlias03.getText()
            , txtAlias04.getText()
            , txtAlias05.getText()
            , txtAlias06.getText()
            , txtAlias07.getText()
            , txtAlias08.getText()
            , txtAlias09.getText()
            , txtAlias10.getText()
            , new TrackChange(null, null, null, user)
        );
        
        return dbTeam.update(obj);
    }

    private void updateRow(){
        Date date = new Date();
        Association association = (Association)cmbAssociation.getSelectedItem();
        Team obj = (Team)lstTeam.getSelectedValue();
        obj.setShortName(txtShortName.getText());
        obj.setName(txtName.getText());
        obj.setAssociation(new Item(association.getId(), association.getName()));
        obj.setAlias01(txtAlias01.getText());
        obj.setAlias02(txtAlias02.getText());
        obj.setAlias03(txtAlias03.getText());
        obj.setAlias04(txtAlias04.getText());
        obj.setAlias05(txtAlias05.getText());
        obj.setAlias06(txtAlias06.getText());
        obj.setAlias07(txtAlias07.getText());
        obj.setAlias08(txtAlias08.getText());
        obj.setAlias09(txtAlias09.getText());
        obj.setAlias10(txtAlias10.getText());
        obj.setIsActive(chkActive.isSelected());
        obj.getTrack().setModUser(user);
        obj.getTrack().setModDate(new Timestamp(date.getTime()));
        txtModUser.setText(user.getName());
        txtModDate.setText(new SimpleDateFormat("MM/dd/yyyy hh:mm:ss").format(date));
    }
    
    private void editRecord() {
        if (action==0){
            setEditScenario();
        } else {
            setNormalScenario();
            loadDetail();
        }
    }

    private void setEditScenario(){
        cmbStatus.setEnabled(false);
        lstTeam.setEnabled(false);
        chkActive.setEnabled(true);
        txtShortName.setEnabled(true);
        txtName.setEnabled(true);
        cmbAssociation.setEnabled(true);
        txtAlias01.setEnabled(true);
        txtAlias02.setEnabled(true);
        txtAlias03.setEnabled(true);
        txtAlias04.setEnabled(true);
        txtAlias05.setEnabled(true);
        txtAlias06.setEnabled(true);
        txtAlias07.setEnabled(true);
        txtAlias08.setEnabled(true);
        txtAlias09.setEnabled(true);
        txtAlias10.setEnabled(true);

        btnNew.setEnabled(true);
        btnEdit.setEnabled(true);
        btnDelete.setEnabled(false);
        
        btnNew.setText("Save");
        btnEdit.setText("Cancel");
        
        action = 2;     // edit action
    }
    
    private void deleteRecord() {
        int ans = JOptionPane.showOptionDialog(this
                , "You are about to delete the object \"" + txtShortName.getText() + "\".\nAre you sure?"
                , "Delete"
                , JOptionPane.OK_CANCEL_OPTION
                , JOptionPane.QUESTION_MESSAGE
                , null
                , null
                , null);
        if (ans == JOptionPane.OK_OPTION){
            String msg = dbTeam.delete(Long.parseLong(txtId.getText()));
            if (!msg.isEmpty()){
                JOptionPane.showMessageDialog(this, msg, "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                loadTeams();
                JOptionPane.showMessageDialog(this, "Record deleted succesfully!", "Delete", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }
}
