/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package soccer.gui;

import java.awt.event.ActionEvent;
import javax.swing.ListSelectionModel;
import java.awt.event.ActionListener;
import java.io.File;
import java.sql.Timestamp;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import security.entities.Item;
import security.entities.UserRight;
import soccer.database.DBFixture;
import soccer.models.FixtureTableModel;
import utils.FixtureLoader;
import utils.FloatRenderer;
import utils.TableColumnAdjuster;
import utils.TimestampRenderer;

/**
 *
 * @author Administrator
 */
public class FrmImportFixture extends javax.swing.JInternalFrame implements ActionListener{
    
    private String currentDir = ".";
    
    /**
     * Creates new form FrmUsers
     */
    public FrmImportFixture(UserRight right, Item user) {
        initComponents();
        myInitComponents(right, user);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFixtures = new javax.swing.JTable();
        btnFilename = new javax.swing.JButton();
        txtFilename = new javax.swing.JTextField();
        btnLoad = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Fixtures and Odds");
        setPreferredSize(new java.awt.Dimension(1100, 680));

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Matches:"));

        tblFixtures.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblFixtures.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblFixtures.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblFixtures);

        btnFilename.setText("...");

        btnLoad.setText("Load");

        btnSave.setText("Save");

        jLabel1.setText("File:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFilename)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnFilename, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 928, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSave)
                    .addComponent(btnLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnLoad, btnSave});

        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnLoad)
                        .addComponent(btnFilename))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtFilename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(12, 532, Short.MAX_VALUE)
                        .addComponent(btnSave))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        jPanel6.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFilename;
    private javax.swing.JButton btnLoad;
    private javax.swing.JButton btnSave;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblFixtures;
    private javax.swing.JTextField txtFilename;
    // End of variables declaration//GEN-END:variables

    private DBFixture dbFixture;
    private UserRight right;
    private Item user;
    
    private void myInitComponents(UserRight right, Item user) {
        this.user = user;
        this.right = right;
        dbFixture = new DBFixture();
        btnFilename.setActionCommand("File");
        btnFilename.addActionListener(this);
        btnLoad.setActionCommand("Load");
        btnLoad.addActionListener(this);
        btnSave.setActionCommand("Save");
        btnSave.addActionListener(this);
        
        tblFixtures.getSelectionModel().setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tblFixtures.setDefaultRenderer(Timestamp.class, new TimestampRenderer("MM/dd/yy HH:mm"));
        tblFixtures.setDefaultRenderer(Float.class, new FloatRenderer("%.2f"));
    }    
                       
    @Override
    public void actionPerformed(ActionEvent e) {
        if (null != e.getActionCommand()){
            switch (e.getActionCommand()) {
                case "File":
                    fileAction();
                    break;
                case "Load":
                    try {
                        loadAction();
                    } catch (Exception ex) {
                        Logger.getLogger(FrmImportFixture.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    break;
                case "Save":
                    saveAction();
                    break;
                default:
                    JOptionPane.showMessageDialog(this, "Action not identified", "Unkown", JOptionPane.ERROR_MESSAGE);
                    break;
            }
        }
    }

    private void fileAction() {
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File(currentDir));
        chooser.setDialogTitle("choosertitle");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);
        
        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            txtFilename.setText(chooser.getSelectedFile().getAbsolutePath());
            currentDir = chooser.getCurrentDirectory().getAbsolutePath();
        }        
    }
    
    private void loadAction() throws Exception{
        File file = new File(txtFilename.getText());
        if (file.exists()){
            FixtureLoader fl = new FixtureLoader();
            tblFixtures.setModel(new FixtureTableModel(fl.xmlReader(file, user)));
            TableModel tableModel = tblFixtures.getModel();
            TableColumnAdjuster ta = new TableColumnAdjuster(tblFixtures);
            ta.setOnlyAdjustLarger(false);
            ta.adjustColumns();
            if (tableModel.getRowCount() > 0){
                tblFixtures.setRowSelectionInterval(0, 0);
            }
        } else {
            JOptionPane.showMessageDialog(this, "File does not exists.", "Filename checking", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void saveAction() {
        if (tblFixtures.getModel().getRowCount() > 0){
            String msg;
            msg = dbFixture.insertFromImport(tblFixtures.getModel(), 1);
            if (msg.isEmpty()){
                JOptionPane.showMessageDialog(this, "Save succesfully completed!!!", "Completed", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, msg, "Failure", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "There are no records to be saved.", "Missing Info", JOptionPane.ERROR_MESSAGE);
        }
    }
}
