/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package soccer.gui;

import java.awt.image.BufferedImage;
import java.util.Date;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SpinnerModel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.TableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import security.entities.Item;
import security.entities.UserRight;
import soccer.database.DBAssociation;
import soccer.database.DBSeason;
import soccer.database.DBStat;
import soccer.database.DBTournament;
import soccer.entities.Association;
import soccer.entities.Season;
import soccer.entities.Tournament;
import soccer.entities.Week;
import soccer.models.AssociationListModel;
import soccer.models.NormalProbTableModel;
import soccer.models.SeasonListModel;
import soccer.models.StandingTableModel;
import soccer.models.TournamentListModel;
import soccer.models.WeekSpinnerModel;
import utils.TableColumnAdjuster;

/**
 *
 * @author Administrator
 */
public class FrmAnalysis extends javax.swing.JInternalFrame implements ChangeListener{

    /**
     * Creates new form FrmUsers
     */
    public FrmAnalysis(UserRight right, Item user) {
        initComponents();
        myInitComponents(right, user);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstTournament = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        lstSeason = new javax.swing.JList();
        jScrollPane6 = new javax.swing.JScrollPane();
        lstAssociation = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        spnWeekNo = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        spnFrom = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        spnTo = new javax.swing.JSpinner();
        btnUpdate = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOverall = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHome = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblAway = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        imgDataChart = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        imgProbabilityChart = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Data Analysis");
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(1300, 680));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Filter:"));

        jLabel1.setText("Association:");

        jLabel2.setText("Tournament:");

        jScrollPane4.setViewportView(lstTournament);

        jLabel3.setText("Seasons:");

        jScrollPane5.setViewportView(lstSeason);

        jScrollPane6.setViewportView(lstAssociation);

        jLabel4.setText("Week No.:");

        jLabel5.setText("From:");

        spnFrom.setModel(new javax.swing.SpinnerDateModel());
        spnFrom.setEditor(new javax.swing.JSpinner.DateEditor(spnFrom, "MM/dd/yyyy HH:mm"));
        spnFrom.setEnabled(false);

        jLabel6.setText("To:");

        spnTo.setModel(new javax.swing.SpinnerDateModel());
        spnTo.setEditor(new javax.swing.JSpinner.DateEditor(spnTo, "MM/dd/yyyy HH:mm"));
        spnTo.setEnabled(false);

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(spnFrom)
                    .addComponent(spnTo)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(spnWeekNo, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                        .addComponent(btnUpdate))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2))
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(0, 77, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnWeekNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spnFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spnTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Teams:"));

        tblOverall.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblOverall.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(tblOverall);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 954, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Overall", jPanel4);

        tblHome.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblHome.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(tblHome);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 954, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Home", jPanel7);

        tblAway.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblAway.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane3.setViewportView(tblAway);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 954, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Away", jPanel8);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Standings", jPanel1);

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblData.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane7.setViewportView(tblData);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 954, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Data", jPanel9);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imgDataChart, javax.swing.GroupLayout.DEFAULT_SIZE, 954, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imgDataChart, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Data Chart", jPanel10);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imgProbabilityChart, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imgProbabilityChart, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Probability Chart", jPanel11);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane3)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Diff Goals", jPanel3);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        SpinnerModel spinnerModel = spnWeekNo.getModel();
        if (spinnerModel instanceof WeekSpinnerModel){
            if (lstSeason.getSelectedIndex() != -1){
                Season season = (Season)lstSeason.getSelectedValue();
                Week week = (Week)((WeekSpinnerModel)spinnerModel).getValue();
                DBStat dbStat = new DBStat();
                dbStat.updateWeeklyStats(season.getId(), week.getWeekNo());
                JOptionPane.showMessageDialog(this, "Update Completed!", "Update Stats", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel imgDataChart;
    private javax.swing.JLabel imgProbabilityChart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JList lstAssociation;
    private javax.swing.JList lstSeason;
    private javax.swing.JList lstTournament;
    private javax.swing.JSpinner spnFrom;
    private javax.swing.JSpinner spnTo;
    private javax.swing.JSpinner spnWeekNo;
    private javax.swing.JTable tblAway;
    private javax.swing.JTable tblData;
    private javax.swing.JTable tblHome;
    private javax.swing.JTable tblOverall;
    // End of variables declaration//GEN-END:variables

    private UserRight right;
    private Item user;
    private DefaultCategoryDataset datasetFrecuency;
    private DefaultCategoryDataset datasetProbability;
    
    private void myInitComponents(UserRight right, Item user) {
        this.user = user;
        this.right = right;
        lstAssociation.addListSelectionListener(new AssociationListSelection());
        lstTournament.addListSelectionListener(new TournamentListSelection());
        lstSeason.addListSelectionListener(new SeasonListSelection());
        
        tblOverall.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblHome.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblAway.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblData.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        spnWeekNo.addChangeListener(this);
        loadAssociations();
    }
        
    private void loadAssociations(){
        DBAssociation dbAssociation = new DBAssociation();
        lstAssociation.setModel(new AssociationListModel(dbAssociation.getList(1)));
        if (lstAssociation.getModel().getSize() > 0){
            lstAssociation.setSelectedIndex(0);
        } else{
            loadTournaments(-1);
        }
    }
    
    private class AssociationListSelection implements ListSelectionListener {
        @Override
        public void valueChanged(ListSelectionEvent e) {
            if (!e.getValueIsAdjusting()){
                if (lstAssociation.getSelectedIndex() != -1){                   
                    Association association = (Association)lstAssociation.getSelectedValue();
                    loadTournaments(association.getId());
                }
            }
        }
    }

    private void loadTournaments(long associationId){
        DBTournament dbTournament = new DBTournament();
        lstTournament.setModel(new TournamentListModel(dbTournament.getListByAssociation(associationId)));
        if (lstTournament.getModel().getSize() > 0){
            lstTournament.setSelectedIndex(0);
        } else {
            loadSeasons(-1);  // clear lstSeason control
        }
    }
    
    private class TournamentListSelection implements ListSelectionListener {
        @Override
        public void valueChanged(ListSelectionEvent e) {
            if (!e.getValueIsAdjusting()){
                if (lstTournament.getSelectedIndex() != -1){
                    Tournament tournament = (Tournament)lstTournament.getSelectedValue();
                    loadSeasons(tournament.getId());
                }
            }
        }
    }

    private void loadSeasons(long tournamentId){
        DBSeason dbSeason = new DBSeason();
        lstSeason.setModel(new SeasonListModel(dbSeason.getList(tournamentId)));
        if (lstSeason.getModel().getSize() > 0){
            lstSeason.setSelectedIndex(0);
        } else {
            loadWeeks(-1);
        }
    }

    private class SeasonListSelection implements ListSelectionListener {
        @Override
        public void valueChanged(ListSelectionEvent e) {
            if (!e.getValueIsAdjusting()){
                if (lstSeason.getSelectedIndex() != -1){
                    Season season = (Season)lstSeason.getSelectedValue();
                    loadWeeks(season.getId());
                }
            }
        }
    }

    private void loadWeeks(long seasonId){
        DBSeason dbSeason = new DBSeason();
        List<Week> list = dbSeason.getWeekList(seasonId);
        if (list.size()>0){
            spnWeekNo.setEnabled(true);
            spnWeekNo.setModel(new WeekSpinnerModel(list));
            Week week = list.get(list.size()-1);
            spnWeekNo.setValue(week);
            spnFrom.setValue(new Date(week.getFrom().getTime()));
            spnTo.setValue(new Date(week.getTo().getTime()));
            loadData(seasonId, week.getWeekNo());
        } else {
            spnWeekNo.setEnabled(false);
        }
    }

    @Override
    public void stateChanged(ChangeEvent e) {
        SpinnerModel spinnerModel = spnWeekNo.getModel();
        if (spinnerModel instanceof WeekSpinnerModel){
                if (lstSeason.getSelectedIndex() != -1){
                    Season season = (Season)lstSeason.getSelectedValue();
                    Week week = (Week)((WeekSpinnerModel)spinnerModel).getValue();
                    spnFrom.setValue(new Date(week.getFrom().getTime()));
                    spnTo.setValue(new Date(week.getTo().getTime()));
                    loadData(season.getId(), week.getWeekNo());
                }
        }
    }
    
    private void loadData(long seasonId, int weekNo){
        DBStat dbStat = new DBStat();
        TableModel tableModel;
    
        // load overall standing (OverallTable)
        tblOverall.setModel(new StandingTableModel(dbStat.getOverallStanding(seasonId, weekNo)));
        TableColumnAdjuster taOverall = new TableColumnAdjuster(tblOverall);
        taOverall.setOnlyAdjustLarger(false);
        taOverall.adjustColumns();
        tableModel = tblOverall.getModel();
        if (tableModel.getRowCount() > 0){
            tblOverall.setRowSelectionInterval(0, 0);
        }

        // load away standings (VisitTable)
        tblHome.setModel(new StandingTableModel(dbStat.getHomeStanding(seasonId, weekNo)));
        TableColumnAdjuster taHome = new TableColumnAdjuster(tblHome);
        taHome.setOnlyAdjustLarger(false);
        taHome.adjustColumns();
        tableModel = tblHome.getModel();
        if (tableModel.getRowCount() > 0){
            tblHome.setRowSelectionInterval(0, 0);
        }
        
        // load away standings (VisitTable)
        tblAway.setModel(new StandingTableModel(dbStat.getAwayStanding(seasonId, weekNo)));
        TableColumnAdjuster taAway = new TableColumnAdjuster(tblAway);
        taAway.setOnlyAdjustLarger(false);
        taAway.adjustColumns();
        tableModel = tblAway.getModel();
        if (tableModel.getRowCount() > 0){
            tblAway.setRowSelectionInterval(0, 0);
        }
        
        // load fecuencies of scored differences and normal probability (NormalProb)
        tblData.setModel(new NormalProbTableModel(dbStat.getNormalProb(seasonId, weekNo)));
        TableColumnAdjuster taData = new TableColumnAdjuster(tblData);
        taData.setOnlyAdjustLarger(false);
        taData.adjustColumns();
        tableModel = tblData.getModel();
        if (tableModel.getRowCount() > 0){
            tblData.setRowSelectionInterval(0, 0);
        }
        
        createDatasets(tableModel);
        
        // Create the frecuency chart
        JFreeChart chartFrecuency = ChartFactory.createBarChart(
                "Frecuency Bar Chart"
                , "Score Differences"
                , "Frecuency"
                , datasetFrecuency
                , PlotOrientation.VERTICAL
                , true, true, false
        );
        BufferedImage imgFrecuency = chartFrecuency.createBufferedImage(450, 550);
        imgDataChart.setIcon(new ImageIcon(imgFrecuency));
        
        // Create the probability chart
        JFreeChart chartProbability = ChartFactory.createBarChart(
                "Probability Bar Chart"
                , "Score Differences"
                , "Probability"
                , datasetProbability
                , PlotOrientation.VERTICAL
                , true, true, false
        );
        BufferedImage imgProbability = chartProbability.createBufferedImage(450, 550);
        imgProbabilityChart.setIcon(new ImageIcon(imgProbability));
    }
    
    private void createDatasets(TableModel model){
        datasetFrecuency = new DefaultCategoryDataset();
        datasetProbability = new DefaultCategoryDataset();
        
        for (int i=0; i<model.getRowCount();i++){
            String xLabel = ((Integer)model.getValueAt(i, 0)).toString();
            Integer frecuency = (Integer)model.getValueAt(i, 1);
            Float probability = (Float)model.getValueAt(i, 2);
            datasetFrecuency.addValue( frecuency, "", xLabel);
            datasetProbability.addValue( probability, "", xLabel);
        }
    }
}
